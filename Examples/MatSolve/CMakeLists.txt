project(MatSolve)
set(SOURCE main.cpp)

add_executable(MatSolve ${SOURCE})

target_link_libraries(MatSolve inmost)

if(USE_MPI)
  message("linking MatSolve with MPI")
  target_link_libraries(MatSolve ${MPI_LIBRARIES})
  if(MPI_LINK_FLAGS)
    set_target_properties(MatSolve PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
  endif()
endif(USE_MPI)

if(USE_SOLVER)
  if(USE_SOLVER_ANI)
    message("linking MatSolve with ani3d and BLAS")
    target_link_libraries(MatSolve ani3d ${BLAS_LIBRARIES})
    if(BLAS_LINKER_FLAGS)
      set_target_properties(MatSolve PROPERTIES LINK_FLAGS "${BLAS_LINKER_FLAGS}")
    endif()
  endif()
  if(USE_SOLVER_PETSC)
    message("linking MatSolve with PETSc")
    target_link_libraries(MatSolve ${PETSC_LIBRARIES})
  endif()
  if(USE_SOLVER_TRILINOS)
    message("linking MatSolve with Trilinos")
    target_link_libraries(MatSolve ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
  endif()
  if(USE_SOLVER_METIS)
    message("linking MatSolve with Metis")
    target_link_libraries(MatSolve ${METIS_LIBRARIES})
  endif()
  if(USE_SOLVER_MONDRIAAN)
    message("linking MatSolve with Mondriaan")
    target_link_libraries(MatSolve ${MONDRIAAN_LIBRARIES})
  endif()
  if(USE_SOLVER_SUPERLU)
    message("linking MatSolve with SuperLU")
    target_link_libraries(MatSolve ${SUPERLU_LIBRARIES})
  endif()
endif()


if(USE_PARTITIONER)
  if(USE_PARTITIONER_ZOLTAN)
    message("linking MatSolve with Zoltan")
    target_link_libraries(MatSolve ${ZOLTAN_LIBRARIES})
  endif()
  if(USE_PARTITIONER_PARMETIS)
    message("linking MatSolve with ParMETIS")
    target_link_libraries(MatSolve ${PARMETIS_LIBRARIES})
  endif()
endif()

if(USE_ZLIB)
 message("linking MatSolve with ZLIB")
 target_link_libraries(MatSolve ${ZLIB_LIBRARIES})
endif(USE_ZLIB)


install(TARGETS MatSolve EXPORT inmost-targets RUNTIME DESTINATION bin)
